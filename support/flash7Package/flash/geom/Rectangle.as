/** * @author colin */import flash.geom.Point;class flash.geom.Rectangle {	public var left : Number;	public var top : Number;	public var right : Number;	public var bottom : Number;	// OR	public var x : Number;	public var y : Number;	public var width : Number;	public var height : Number;	// OR	public var size : Point;	public var bottomRight : Point;	public var topLeft : Point;		function Rectangle( x : Number, y : Number, w : Number, h : Number ){		this.x = x;		this.y = y;		this.width = w;		this.height= h;		this.left=x;		this.top=y;		this.right=x+w;		this.bottom=y+h;		this.size = new Point(w,h);		this.bottomRight = new Point(this.bottom, this.right);		this.topLeft = new Point(this.top, this.left);	}	public function equals( r : Object ) : Boolean{		trace('method not implement, Rectangle.equals'+r);		return false;	};	public function union( r : Rectangle ) : Rectangle{		trace('method not implement, Rectangle.equals'+r);		return this;	};	public function intersects( r : Rectangle ) : Boolean{		trace('method not implement, Rectangle.equals'+r);		return false;	};	public function intersection( r : Rectangle ) : Rectangle{		trace('method not implement, Rectangle.equals'+r);		return this;	};	public function containsRectangle( r : Rectangle ) : Boolean{		trace('method not implement, Rectangle.equals'+r);		return false;	};	public function containsPoint( p : Point ) : Boolean{		trace('method not implement, Rectangle.equals'+p);		return false;	};	public function contains( x : Number, y : Number ) : Boolean{		trace('method not implement, Rectangle.contains '+x+','+y);		return false;	};	public function offsetPoint( p : Point ) : Void{		trace('method not implement, Rectangle.offsetPoint'+p);			};	public function offset( x : Number, y : Number ) : Void{		trace('method not implement, Rectangle.offset'+x+','+y);	};	public function inflatePoint( p : Point ) : Void{		trace('method not implement, Rectangle.inflatePoint'+p);	};	public function inflate( x : Number, y : Number ) : Void{		trace('method not implement, Rectangle.inflate'+x+','+y);	};	public function isEmpty() : Boolean{		trace('method not implement, Rectangle.isEmpty');		return false;	};	public function setEmpty() : Void{		trace('method not implement, Rectangle.setEmpty');	};	public function clone() : Rectangle{		trace('method not implement, Rectangle.clone');		return this;	};	public function toString() : String{		trace('method not implement, Rectangle.toString');		return 'Object Rectangle';	};}