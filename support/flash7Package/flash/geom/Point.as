/** * @author colin */class flash.geom.Point {	var x : Number;	var y : Number;	var length : Number;		function Point( x : Number, y : Number ){		this.x = x;		this.y = y;		this.length=Math.sqrt(x*x+y*y);	};	function normalize( length : Number ) : Void{			}	function add( p : Point ) : Point{		return new Point(x+p.x,y+p.y);	};	function subtract( p : Point ) : Point{		return new Point(x-p.x,y-p.y);	};	function equals( p : Object ) : Boolean{		return (x==p['x']&&y==p['y']);	}	function offset( dx : Number, dy : Number ) : Void{		x+=dx;		y+=dy;	};	function clone() : Point{		return new Point(x,y);	};	function toString() : String{		return 'Object Point{x:'+x+',y:'+y+'}';	};	static function distance( p1 : Point, p2 : Point ) : Number{		var dx:Number = Math.abs(p1.x-p2.x);		var dy:Number = Math.abs(p1.y-p2.y);		return Math.sqrt(dx*dx+dy*dy);	};	static function interpolate( p1 : Point, p2 : Point, f : Number ) : Point{		var px:Number = p1.x*(1-f)+p2.x*(f);		var py:Number = p1.y*(1-f)+p2.y*f;		return new Point(px,py);	};	static function polar( dist : Number, angle : Number ) : Point{		trace('method not implement, Point.polar '+dist+','+angle);		return new Point(0,0);	};}