/** * @author colin */import mx.utils.Delegate;import com.mixmedia.collection.IList;import com.mixmedia.collection.events.ListEvent;import com.mixmedia.motion.MotionTween;import com.mixmedia.view.collection.IListCell;import com.mixmedia.view.collection.ListView;import com.mixmedia.view.collection.RenderAsThumbnails;class CountryList extends MovieClip implements IList{	private var base:ListView;	private var motion:MotionTween;	private var cellMotion:MotionTween;	private var mcCells:MovieClip;	private var cellHeight : Number;	public function CountryList(){		var heightTest:MovieClip = this.attachMovie(CountryCell.IDENTIFIER, "heightTest", 0, {a:0});		cellHeight = IListCell(heightTest).getRowHeight();		heightTest.removeMovieClip();				mcCells = this.createEmptyMovieClip("mcCells", 200);		var mask:MovieClip = this.createEmptyMovieClip("mask", 100);		mask.beginFill(0, 10);		mask.moveTo(0, 0);		mask.lineTo(100, 0);		mask.lineTo(100,100);		mask.lineTo(0,100);		mask.endFill();		mcCells.setMask(mask);			base = new ListView(new RenderAsThumbnails(CountryCell.IDENTIFIER,mcCells,100,1));		base.addEventListener(ListEvent.CHANGE, Delegate.create(this,onCellSelect));		mask._yscale = cellHeight;				motion = new MotionTween(mask);		cellMotion = new MotionTween(mcCells);	}	private function onLoad():Void{		this['btnOpen'].onRelease = Delegate.create(this,open);		this['btnClose'].onRelease= Delegate.create(this,close);	}	private function onCellSelect(e:ListEvent):Void{		cellMotion.startTween({y:-e.value*cellHeight});		close();	}	public function open():Void{		motion.startTween({ys:mcCells._height,y:mcCells._y});	}	public function close():Void{		motion.startTween({ys:13,y:0});	}	public function setData(data : Array) : Void {		base.setData(data);	}		public function getItemIndex(item : Object) : Number {		return base.getItemIndex(item);	}		public function setIndex(value : Number) : Void {		base.setIndex(value);	}		public function getIndex() : Number {		return base.getIndex();	}		public function getMax() : Number {		return base.getMax();	}}